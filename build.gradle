apply plugin: "c"

model {
    buildTypes {
        debug
        release
    }
    components {
        muddled(NativeLibrarySpec) {
        	sources {
        		c {
        			source {
        				srcDir "src/libmuddled"
        			}
        			exportedHeaders {
                        srcDir "src/export"
                    }
        		}
        	}
        }
        muddledtimes(NativeExecutableSpec) {
            sources {
                c {
                    source {
	                    srcDir "src/muddled"
	                }
	                lib library: 'muddled', linkage: 'shared'
                }
            }
        }
        binaries.all {

            if (toolChain in Gcc || toolChain in Clang) {
                if(buildType == buildTypes.debug) {
                    cCompiler.args "-g", "-O0"
                }
                cCompiler.args "-std=c99"
                linker.args "-lsqlite3", "-lwebsockets"
            } 
            else  if (toolChain in VisualCpp) {
                if(buildType == buildTypes.debug) {
                    cCompiler.args '/Zi'
                    cCompiler.define 'DEBUG'
                    linker.args '/DEBUG'
                }
            }
        }
    }

}